# Experiment with arm64

name: arm64

on:
  push:
  pull_request:
  release:
  workflow_dispatch:

jobs:
  build_package:
    runs-on: ubuntu-24.04-arm
    container:
      image: eddelbuettel/r2u_build:noble
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install R packages
        run: |
          apt update -qq
          apt install --yes --no-install-recommends r-cran-remotes r-cran-data.table r-cran-crayon
      - name: Install docker
        run: |
          apt install --yes --no-install-recommends docker.io
      - name: Install r2u
        run: |
          r -e 'if (!dir.exists(tools::R_user_dir("r2u"))) dir.create(tools::R_user_dir("r2u"), recursive=TRUE)'
          installGithub.r --update FALSE eddelbuettel/r2u
          r -pe 'dir(tools::R_user_dir("r2u"))'
        env:
          GITHUB_PAT: ${{ secrets.PAT_GITHUB }}
      - name: Test docker
        run: |
          docker version
          docker info
          
        
  create_builder:
    runs-on: ubuntu-24.04-arm
    if: github.repository != 'eddelbuettel/gha_noodling'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          context: r2u-builder
          tags: eddelbuettel/r2u_build:noble

  ## original initial job
  update:
    runs-on: ubuntu-24.04-arm
    if: github.repository != 'eddelbuettel/gha_noodling'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Status
        run: |
          uname -a
          cat /proc/cpuinfo
          docker version
          docker info
      #- name: Container r-base
      #  run: |
      #    docker pull r-base
      #    docker run --rm r-base R -q -e 'R.version'
      #- name: Container ubuntu:noble
      #  run: |
      #    docker pull ubuntu:noble
      #    docker run --rm ubuntu:noble uname -a
      #    docker run --rm ubuntu:noble bash -c 'apt update -q; apt install -y dpkg-dev; dpkg-architecture'
      - name: Container build
        run: |
          cd r-ubuntu
          docker build -t rocker/r2u:test .
      - name: Container test
        run: |
          docker run --rm rocker/r2u:test Rscript --version
          docker run --rm rocker/r2u:test Rscript -e "installed.packages()"
      #- name: Buildx
      #  uses: docker/setup-buildx-action@v3
      
